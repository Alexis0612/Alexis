/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Clases.Conectar;
import Clases.Datos;
import Clases.Usuario;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joela
 */
public class frmUsuario extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmLogin
     */
    public frmUsuario() {
        initComponents();
    }
    private Connection con;
    
    private int UsuAct = 0;
    
    private Datos misUsuarios = new Datos();
    
    //crear un objeto para conectarnos a la clase Datos
    private Datos misDatos;
    
    //modificar los parametros de la tabla
    private DefaultTableModel miTabla;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        btnPrimero = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtClave = new javax.swing.JPasswordField();
        cmbPerfil = new javax.swing.JComboBox<>();
        txtConfirmation = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        txtNombre = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnPDF = new javax.swing.JButton();
        btnPrimero1 = new javax.swing.JButton();
        btnAnterior1 = new javax.swing.JButton();
        btnSiguiente1 = new javax.swing.JButton();
        btnUltimo1 = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        btnPrimero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Primero.png"))); // NOI18N
        btnPrimero.setToolTipText("Va al primer registro");

        btnAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Anterior.png"))); // NOI18N
        btnAnterior.setToolTipText("Va al anterior registro");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Siguiente.png"))); // NOI18N
        btnSiguiente.setToolTipText("Va al siguiente registro");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ultimo.png"))); // NOI18N
        btnUltimo.setToolTipText("Va al ultimo registro");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("USUARIOS");
        setAutoscrolls(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Id Usuario:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nombres:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Apellidos:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Clave:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Perfil:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Confirmaci√≥n:");

        txtId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtApellido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtClave.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cmbPerfil.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbPerfil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un Perfil", "Administrador", "Empleado", " " }));
        cmbPerfil.setLightWeightPopupEnabled(false);

        txtConfirmation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTabla);

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nuevo.png"))); // NOI18N
        btnNuevo.setToolTipText("Nuevo registro");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Modificar.png"))); // NOI18N
        btnModificar.setToolTipText("Modificar registro");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Borrar2.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar registro");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar.png"))); // NOI18N
        btnBuscar.setToolTipText("Buscar registro");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnConsultar.setToolTipText("Consultar registro");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/applications.png"))); // NOI18N
        btnLimpiar.setToolTipText("Limpiar registro");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/library bookmarked.png"))); // NOI18N
        btnPDF.setToolTipText("PDF del registro");
        btnPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFActionPerformed(evt);
            }
        });

        btnPrimero1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Primero.png"))); // NOI18N
        btnPrimero1.setToolTipText("Va al primer registro");

        btnAnterior1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Anterior.png"))); // NOI18N
        btnAnterior1.setToolTipText("Va al anterior registro");

        btnSiguiente1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Siguiente.png"))); // NOI18N
        btnSiguiente1.setToolTipText("Va al siguiente registro");

        btnUltimo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ultimo.png"))); // NOI18N
        btnUltimo1.setToolTipText("Va al ultimo registro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtId)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(cmbPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtApellido, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtConfirmation, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(19, Short.MAX_VALUE)
                        .addComponent(btnPrimero1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAnterior1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSiguiente1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUltimo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPDF)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel1)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel6)
                        .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtConfirmation, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPDF)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnConsultar)
                            .addComponent(btnNuevo)
                            .addComponent(btnBuscar)
                            .addComponent(btnModificar)
                            .addComponent(btnEliminar)
                            .addComponent(btnLimpiar)))
                    .addComponent(btnPrimero1)
                    .addComponent(btnAnterior1)
                    .addComponent(btnSiguiente1)
                    .addComponent(btnUltimo1))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //crear un metodo para limpiar los cuadros de textos
    private void limpiar()
    {
        txtId.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        txtClave.setText("");
        txtConfirmation.setText("");
        cmbPerfil.setSelectedIndex(0); //posicion cero es la primera
    }
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        llenarTabla();
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
                //validaciones
        if(txtId.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar el Id del usuario");
            txtId.grabFocus();
            return;                   
        }
        Conectar con = new Conectar();
        Usuario usuario = con.getUsuario(txtId.getText());
        if(usuario != null)
        {
            JOptionPane.showMessageDialog(rootPane,"Usuario ya existe");
            txtId.setText("");
            txtId.grabFocus();
            con.cerrarConexion();
            return;  
        }
        if(!validarCampos())
        {
            con.cerrarConexion();
            return;
        }
        usuario = new Usuario(txtId.getText(),
                txtNombre.getText(),
                txtApellido.getText(),
                String.valueOf(txtClave.getPassword()),
                cmbPerfil.getSelectedIndex());
        
        if(con.insertarUsuario(usuario))
        {
            JOptionPane.showMessageDialog(rootPane,"Usuario ingresado correctamente");
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane,"Usuario no ingresado correctamente");
        }
        
        //limpiar los campos
        limpiar();
        con.cerrarConexion();
        llenarTabla();
    }//GEN-LAST:event_btnNuevoActionPerformed

    //metodo privado para validar campos
    private boolean validarCampos()
    {
        if(txtNombre.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar el nombre del usuario","Nombres", WIDTH);
            txtNombre.grabFocus();
            return false;
        }
        
        if(txtApellido.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar el apellido del usuario","Apellidos", WIDTH);
            txtApellido.grabFocus();
            return false;
        }
        
        String clave = new String(txtClave.getPassword());
        String confirmacion = new String(txtConfirmation.getPassword());
        
        if(clave.equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar la clave del usuario","Clave", WIDTH);
            txtClave.grabFocus();
            return false;
        }
        
        if(confirmacion.equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar la confirmacion","Confirmacion", WIDTH);
            txtConfirmation.grabFocus();
            return false;
        }
        
        if (!clave.equals(confirmacion))
        {
            JOptionPane.showMessageDialog(rootPane, "La clave y la confirmacion no son iguales","Advertencia", WIDTH);
            txtClave.setText("");
            txtConfirmation.setText("");
            txtClave.grabFocus();
            return false;
        }          
        
        if(cmbPerfil.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar el perfil","Perfil", WIDTH);
            cmbPerfil.grabFocus();
            return false;
        }
        return true;
    }
    
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        //validaciones
        if(txtId.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar el Id del usuario");
            txtId.grabFocus();
            return;
        }
        Conectar con = new Conectar();
        Usuario usuario = con.getUsuario(txtId.getText());
        if(usuario == null)
        {
            JOptionPane.showMessageDialog(rootPane,"Usuario no existe");
            txtId.setText("");
            txtId.grabFocus();
            con.cerrarConexion();
            return;
        }
        usuario = new Usuario(txtId.getText(),
            txtNombre.getText(),
            txtApellido.getText(),
            String.valueOf(txtClave.getPassword()),
            cmbPerfil.getSelectedIndex());

        if(!validarCampos())
        {
            con.cerrarConexion();
            return;
        }

        if(con.UpdateUsuario(usuario))
        {
            JOptionPane.showMessageDialog(rootPane,"Usuario actualizado correctamente");
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane,"Usuario no actualizado correctamente");
        }
        con.cerrarConexion();
        llenarTabla();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int resp = JOptionPane.showConfirmDialog(rootPane, "Esta seguro de eliminar el usuario");
        if(resp != 0)
        {
            return;
        }
        //validaciones
        if(txtId.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar el Id del usuario");
            txtId.grabFocus();
            return;
        }
        Conectar con = new Conectar();
        Usuario usuario = con.getUsuario(txtId.getText());
        if(usuario == null)
        {
            JOptionPane.showMessageDialog(rootPane,"Usuario no existe");
            txtId.setText("");
            txtId.grabFocus();
            con.cerrarConexion();
            return;
        }
        if(con.deleteUsuario(usuario))
        {
            JOptionPane.showMessageDialog(rootPane, "Usuario eliminado correctamente");
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Usuario no eliminado");
        }
        limpiar();
        con.cerrarConexion();
        llenarTabla();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String id = JOptionPane.showInputDialog(rootPane,"Ingrese el Id del usuario a buscar");

        if(id.equals(""))
        {
            return;
        }

        Conectar con = new Conectar();
        Usuario usuario = con.getUsuario(id);
        if(usuario == null)
        {
            JOptionPane.showMessageDialog(rootPane,"Usuario no existe");
            txtId.setText("");
            txtId.grabFocus();
            con.cerrarConexion();
            return;
        }
        txtId.setText(usuario.getIdUsuario());
        txtNombre.setText(usuario.getNombres());
        txtApellido.setText(usuario.getApellidos());
        txtClave.setText(usuario.getClave());
        txtConfirmation.setText(usuario.getClave());
        cmbPerfil.setSelectedIndex(usuario.getPerfil());
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        //validaciones
        if(txtId.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar el Id del usuario");
            txtId.grabFocus();
            return;
        }
        Conectar con = new Conectar();
        Usuario usuario = con.getUsuario(txtId.getText());
        if(usuario == null)
        {
            JOptionPane.showMessageDialog(rootPane,"Usuario no existe");
            txtId.setText("");
            txtId.grabFocus();
            con.cerrarConexion();
            return;
        }
        txtNombre.setText(usuario.getNombres());
        txtApellido.setText(usuario.getApellidos());
        txtClave.setText(usuario.getClave());
        txtConfirmation.setText(usuario.getClave());
        cmbPerfil.setSelectedIndex(usuario.getPerfil());
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFActionPerformed
        //crear un archivo PDF con la informacion de la tabla usuario
        Document documento = new Document();
        try {
            PdfWriter.getInstance(documento, new FileOutputStream("Usuario.pdf"));
            String texto = "Reporte de Usuarios";
            Paragraph parrafo = new Paragraph(texto);
            documento.open();
            documento.add(parrafo);
            Conectar conectar = new Conectar();
            ResultSet rs = conectar.getUsuarios();

            while(rs.next())
            {
                texto = "ID: " + rs.getString("Id_usuarios") + " - Nombre: "
                + rs.getString("Nombre") + " - Apellido: "
                + rs.getString("Apellido") + " - Perfil: "
                + Perfil(rs.getString("Id_Perfil"));

                parrafo = new Paragraph(texto);
                documento.add(parrafo);
            }
            conectar.cerrarConexion();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmUsuario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(frmUsuario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally
        {
            documento.close();
            JOptionPane.showMessageDialog(rootPane, "Reporte generado");
        }
    }//GEN-LAST:event_btnPDFActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUltimoActionPerformed
    
    //crear un metodo privado para mostrar los registros en la tabla
    private void llenarTabla()
    {
        //generamos una instancia a la clase conectar
        Conectar conectar = new Conectar();
        try {
            //llenar los encabezados de las columnas
            String titulos[] = {"Id Usuario", "Nombres Usuarios", "Apellidos Usuarios", "Perfil Usuarios"};
            miTabla = new DefaultTableModel(null, titulos);
            String registros[] = new String[4];
        
            ResultSet rs = conectar.getUsuarios();
            while(rs.next())
            {
                registros[0] = rs.getString("Id_usuarios");
                registros[1] = rs.getString("Nombre");
                registros[2] = rs.getString("Apellido");               
                registros[3] = Perfil(rs.getString("Id_Perfil")); 
                miTabla.addRow(registros);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        tblTabla.setModel(miTabla);
        conectar.cerrarConexion();
    }

    //metodo para definir el perfil
    private String Perfil(String IdPerfil)
    {
        switch(IdPerfil)
        {
        case "0": return "Seleccion un perfil";
        case "1": return "Administrador";
        case "2": return "Empleado";
        default: return "No es una seleccion valida";
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnAnterior1;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnPDF;
    private javax.swing.JButton btnPrimero;
    private javax.swing.JButton btnPrimero1;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnSiguiente1;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JButton btnUltimo1;
    private javax.swing.JComboBox<String> cmbPerfil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTabla;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JPasswordField txtClave;
    private javax.swing.JPasswordField txtConfirmation;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
